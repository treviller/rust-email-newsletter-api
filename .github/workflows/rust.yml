name: Rust

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    services:
      postgres: 
        image: postgres:12
        env: 
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports: 
         - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with: 
        profile: minimal
        toolchain: stable
        override: true
    - name: Migrate database
      run: |
        sudo apt-get install libpq-dev -y
        cargo install --version=0.6.0 sqlx-cli --no-default-features --features rustls,postgres
        SKIP_DOCKER=true ./docker/db/init_db.sh
    - uses: actions-rs/cargo@v1
      with:
        command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - run: rustup component add clippy

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.6.0 sqlx-cli --no-default-features --features rustls,postgres
          SKIP_DOCKER=true ./docker/db/init_db.sh
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings