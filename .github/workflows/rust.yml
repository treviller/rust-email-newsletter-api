name: Rust

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 2G
  SCCACHE_DIR: /home/runner/.cache/sccache

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    services:
      postgres: 
        image: postgres:12
        env: 
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports: 
         - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Install sccache
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.13
      run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with: 
        profile: minimal
        toolchain: stable
        override: true
    - name: Cache cargo registry
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Save sccache
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: /home/runner/.cache/sccache
        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-sccache-
    - name: Start sccache server
      run: sccache --start-server
    - name: Migrate database
      run: |
        sudo apt-get install libpq-dev -y
        cargo install --version=0.6.0 sqlx-cli --no-default-features --features rustls,postgres
        SKIP_DOCKER=true ./docker/db/init_db.sh
    - uses: actions-rs/cargo@v1
      with:
        command: test
    - run: rustup component add clippy
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
    - name: Print sccache stats
      run: sccache --show-stats
    - name: Stop sccache server
      run: sccache --stop-server || true

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - run: rustup component add clippy

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          cargo install --version=0.6.0 sqlx-cli --no-default-features --features rustls,postgres
          SKIP_DOCKER=true ./docker/db/init_db.sh
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings